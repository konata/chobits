;; filter 
(do
  (def filterr (lambda (fn lst collector)
    (trace lst)
    (if (nil? lst) 
        collector 
        (if (fn (car lst)) 
         (filterr fn (cdr lst) (cons (car lst) collector))
         (filterr fn (cdr lst) collector)
         ))
  ))

  (def filter (lambda (fn lst)
    (filterr fn lst nil)
  ))

  (def l (cons 30 (cons 29 (cons 31 (cons 28 nil)))))
  (trace (filter (lambda (x) (> x 30)) l))
)